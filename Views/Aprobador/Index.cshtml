@model Portal_MovilEsales.Services.AprobadorServices.ViewModels.InicioAprobador.InicioAprobador
@{
    ViewData["Title"] = "Aprobador";
}

<div class="row">
    <div class="col-sm-12">
        <div class="card card-container">
            <div class="card-body">
                <div class="card-title">
                    <h1>Información personal</h1>
                </div>
                <h4 class="title">@Model.nombreAprobador</h4>
                <div class="d-flex border-br-orange">
                    <div class="me-auto">
                        <label class="card-subtitle">Correo Electrónico: <span style="color: black;">@Model.correo</span></label>
                    </div>
                    <div>
                        <label class="card-subtitle">Ciudad - Pais: <span style="color: black;">@Model.ciudad - @Model.pais</span></label>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <input type="hidden" id="numeroOrdenHidden" />

    <div class="col-sm-12 mt-3">
        <div class="card card-container">

            <div class="modal fade" id="modalPedidoPendiente" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">

                @if (Model.detallePedidoPendiente is not null)
                {
                    @Html.Partial("_ModalDetallePedidoPendiente")
                }
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-sm-12 col-md-9">
                        <div class="card-title">
                            <h3>Pedidos Pendientes</h3>
                        </div>
                        <hr />
                    </div>
                    <div class="col-sm-12 col-md-3">
                        <div style="padding-top: 12px; display:flex;">
                            <input type="text" class="buscador" placeholder="Buscador">
                            <svg style="margin:5px;" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g id="&#240;&#159;&#166;&#134; icon &#34;search&#34;">
                                    <path id="Vector" d="M9.88894 18.7779C14.7982 18.7779 18.7779 14.7982 18.7779 9.88894C18.7779 4.97971 14.7982 1 9.88894 1C4.97971 1 1 4.97971 1 9.88894C1 14.7982 4.97971 18.7779 9.88894 18.7779Z" stroke="#01ADEF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                    <path id="Vector_2" d="M21 21.0013L16.1666 16.168" stroke="#01ADEF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </g>
                            </svg>

                        </div>
                    </div>
                </div>
                <div class="tab-content pt-3" id="myTabContent">
                    <div class="tab-pane fade show active" id="clientes-tab-pane" role="tabpanel" aria-labelledby="clientes-tab" tabindex="0">
                        <div class="table-responsive table-container">
                            <table class="table">
                                <thead class="card-table_header">
                                    <tr>
                                        <th class="border-radius-left text-center" scope="col" style="padding:13px;">Asesor</th>
                                        <th scope="col" class="text-center" style="padding:13px;">Cliente</th>
                                        <th scope="col" class="text-center" style="padding:13px;">N° Orden E-Sales</th>
                                        <th scope="col" class="text-center" style="padding:13px;">Observaciones</th>
                                        <th scope="col" class="text-center" style="padding:13px;">F. Creación</th>
                                        <th class="border-radius-right" scope="col" style="padding:13px;" />
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.listadoPedidos)
                                    {
                                        <tr>
                                            <td>@item.nombreAsesor</td>
                                            <td>@item.nombreCliente</td>
                                            <td>@item.numeroOrden</td>
                                            <td style="white-space: pre-wrap">@item.observacion</td>
                                            <td>@item.fechaCreacion</td>
                                            <td>
                                                @*  <svg style="margin:5px;" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg" data-bs-toggle="modal" data-bs-target="#modalPedidoAprobado"> *@
                                                <svg style="margin:5px;" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg" onclick="abrirModal('@Url.Action("CargarInformacionModalDetallePedidoPendiente", "Aprobador", new { numeroOrden = item.numeroOrden })','modalPedidoPendiente','@item.numeroOrden')">

                                                    <g id="&#240;&#159;&#166;&#134; icon &#34;search&#34;">
                                                        <path id="Vector" d="M9.88894 18.7779C14.7982 18.7779 18.7779 14.7982 18.7779 9.88894C18.7779 4.97971 14.7982 1 9.88894 1C4.97971 1 1 4.97971 1 9.88894C1 14.7982 4.97971 18.7779 9.88894 18.7779Z" stroke="#01ADEF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                        <path id="Vector_2" d="M21 21.0013L16.1666 16.168" stroke="#01ADEF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                    </g>
                                                </svg>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    const abrirModal = (url, idElemento, numeroOrden) => {

        console.log(url)

        fetch(url)
            .then(response => response.text())
            .then(html => {
                //console.log(html); // Verifica la respuesta en la consola

                var numeroOrdenPedido = document.getElementById("numeroOrdenHidden");

                numeroOrdenPedido.value = numeroOrden;

                console.log("numeroOrdenSteada" + numeroOrden)

                // Vaciar el contenido del modal existente
                document.getElementById(idElemento).innerHTML = '';

                // Insertar el HTML recibido en el modal
                document.getElementById(idElemento).innerHTML = html;

                // Obtener el modal
                var modalElement = document.getElementById(idElemento);

                var modal = new bootstrap.Modal(modalElement);

                // Mostrar el modal
                modal.show();
            })
            .catch(error => console.error('Error al cargar información:', error));
    }

    const procesarPedido = (url) => {
        fetch(url)
            .then(response => response.text())
            .then(html => {

                showAlert("Proceso exitoso", "", "success");
            })
            .catch(error => console.error('Error al cargar información:', error));
    }

    const showAlert = (title, message, type) => {
        Swal.fire({
            title: title,
            text: message,
            showDenyButton: false,
            showCancelButton: false,
            confirmButtonText: "Aceptar",
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.reload();
            }
        });
    }

    const showComfirmModal = () => {

        var radioButtonsDescuentos = document.getElementsByName("descuentos");

        var radioButtonsCondicionesEspeciales = document.getElementsByName("ce");

        var radioButtonsNotaCredito = document.getElementsByName("notaCredito");

        var selectedValueDescuentos = '';

        var selectedValueCondicionesEspeciales = '';

        var selectedValueNotaCredito = '';

        var selectedValueGeneral = 'No';

        var mensaje = document.getElementById("mensajePedido").value;

        var numeroOrden = document.getElementById("numeroOrdenHidden").value;

        for (var i = 0; i < radioButtonsDescuentos.length; i++) {
            if (radioButtonsDescuentos[i].checked) {

                if (radioButtonsDescuentos[i].value === 'descuentoAprobar') {
                    selectedValueDescuentos = 'Si'
                } else {
                    selectedValueDescuentos = 'No'
                }

                console.log("descuentos" + selectedValueDescuentos)
                break;
            }
        }

        for (var i = 0; i < radioButtonsCondicionesEspeciales.length; i++) {
            if (radioButtonsCondicionesEspeciales[i].checked) {

                if (radioButtonsCondicionesEspeciales[i].value === 'ceAprobar') {
                    selectedValueCondicionesEspeciales = 'Si'
                } else {
                    selectedValueCondicionesEspeciales = 'No'
                }

                console.log("condicione especiales" + selectedValueCondicionesEspeciales);
                break;
            }
        }

        for (var i = 0; i < radioButtonsNotaCredito.length; i++) {
            if (radioButtonsNotaCredito[i].checked) {

                if (radioButtonsNotaCredito[i].value === 'notaCreditoAprobar') {
                    selectedValueNotaCredito = 'Si'
                } else {
                    selectedValueNotaCredito = 'No'
                }

                console.log("nota credito" + selectedValueNotaCredito);
                break;
            }
        }

        if (selectedValueDescuentos !== '' && selectedValueCondicionesEspeciales !== ''
            && selectedValueNotaCredito !== '') {

            if (selectedValueDescuentos === 'Si' && selectedValueNotaCredito === 'Si') {

                selectedValueGeneral = "Si"
            }

            console.log('general'+selectedValueGeneral)

            url = `/Aprobador/ProcesarPedido?numeroOrden=${numeroOrden}&aprobacionDescuento=${selectedValueDescuentos}&aprobacionCondicionesEspeciales=${selectedValueCondicionesEspeciales}&aprobacionNotaCredito=${selectedValueNotaCredito}&aprobacionGeneral=${selectedValueGeneral}&mensaje=${mensaje}`

            let accionPeticion = selectedValueGeneral === "Si" ? "aprobar" : "rechazar";

            Swal.fire({
                title: `¿Está seguro que desea ${accionPeticion} el pedido?`,
                text: "Una vez realizada esta acción no habrá forma de revertirla",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Aceptar",
                cancelButtonText:"Cancelar"
            }).then((result) => {
                if (result.isConfirmed) {
                    procesarPedido(url)
                }
            });


        } else {

            alert("Debe escojer una opción en todos lo campos requeridos")
        }

    }

</script>