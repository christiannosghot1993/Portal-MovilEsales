@using Newtonsoft.Json;
@model Portal_MovilEsales.Services.ClienteServices.ViewModels.NuevoPedido.NuevoPedido
@{
    ViewData["Title"] = "Nuevo Pedido Catálogo de Productos";
}

<div class="row">

    <div class="col-sm-12">
        <div class="card card-container">
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <div class="card-title">
                            <h1>Nuevo Pedido</h1>
                        </div>
                    </div>
                </div>

                @*  <input type="hidden" value=@Model.procesoRespuesta.mensajeProceso id="mensaje-proceso-hidden"/> *@

                <div class="d-flex justify-content-end pt-3 mb-3">
                    <a class="orange-rounded-button" asp-action="PedidosCliente" asp-controller="Cliente" style="background-color: #69A5BD !important;">
                        Cancelar
                        <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g id="01 align center">
                                <path id="Vector" d="M15.293 8.11279L12 11.4058L8.70697 8.11279L7.29297 9.52679L10.586 12.8198L7.29297 16.1128L8.70697 17.5268L12 14.2338L15.293 17.5268L16.707 16.1128L13.414 12.8198L16.707 9.52679L15.293 8.11279Z" fill="white" />
                                <path id="Vector_2" d="M12 0.819824C9.62663 0.819824 7.30655 1.52361 5.33316 2.84219C3.35977 4.16077 1.8217 6.03491 0.913451 8.22762C0.00519943 10.4203 -0.232441 12.8331 0.230582 15.1609C0.693605 17.4887 1.83649 19.6269 3.51472 21.3051C5.19295 22.9833 7.33115 24.1262 9.65892 24.5892C11.9867 25.0523 14.3995 24.8146 16.5922 23.9064C18.7849 22.9981 20.6591 21.4601 21.9776 19.4867C23.2962 17.5133 24 15.1932 24 12.8198C23.9966 9.63828 22.7312 6.58804 20.4815 4.33834C18.2318 2.08865 15.1815 0.823265 12 0.819824V0.819824ZM12 22.8198C10.0222 22.8198 8.08879 22.2333 6.4443 21.1345C4.79981 20.0357 3.51809 18.4739 2.76121 16.6467C2.00433 14.8194 1.8063 12.8087 2.19215 10.8689C2.578 8.92911 3.53041 7.14728 4.92894 5.74876C6.32746 4.35023 8.10929 3.39782 10.0491 3.01197C11.9889 2.62612 13.9996 2.82415 15.8268 3.58103C17.6541 4.33791 19.2159 5.61963 20.3147 7.26412C21.4135 8.90861 22 10.842 22 12.8198C21.9971 15.4711 20.9426 18.0129 19.0679 19.8877C17.1931 21.7624 14.6513 22.8169 12 22.8198Z" fill="white" />
                            </g>
                        </svg>

                    </a>
                    <button class="orange-rounded-button ms-1" onclick="guardarBorrador('@Url.Action("PostGuardarBorrador", "Cliente")')" style="background-color:#01ADEF   !important;">
                        Guardar como Borrador
                        <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g id="01 align center">
                                <path id="Vector" d="M19 0.819824H3C2.20435 0.819824 1.44129 1.13589 0.87868 1.6985C0.31607 2.26111 0 3.02417 0 3.81982L0 24.8198H24V5.81982L19 0.819824ZM7 2.81982H17V6.81982H7V2.81982ZM22 22.8198H2V3.81982C2 3.55461 2.10536 3.30025 2.29289 3.11272C2.48043 2.92518 2.73478 2.81982 3 2.81982H5V8.81982H19V3.64782L22 6.64782V22.8198Z" fill="white" />
                                <path id="Vector_2" d="M12 10.8196C11.2089 10.8196 10.4355 11.0542 9.77772 11.4937C9.11993 11.9332 8.60723 12.5579 8.30448 13.2888C8.00173 14.0198 7.92252 14.824 8.07686 15.5999C8.2312 16.3759 8.61216 17.0886 9.17157 17.648C9.73098 18.2074 10.4437 18.5884 11.2196 18.7427C11.9956 18.8971 12.7998 18.8178 13.5307 18.5151C14.2616 18.2123 14.8864 17.6997 15.3259 17.0419C15.7654 16.3841 16 15.6107 16 14.8196C16 13.7587 15.5786 12.7413 14.8284 11.9912C14.0783 11.241 13.0609 10.8196 12 10.8196ZM12 16.8196C11.6044 16.8196 11.2178 16.7023 10.8889 16.4825C10.56 16.2628 10.3036 15.9504 10.1522 15.5849C10.0009 15.2195 9.96126 14.8174 10.0384 14.4294C10.1156 14.0414 10.3061 13.6851 10.5858 13.4054C10.8655 13.1257 11.2219 12.9352 11.6098 12.858C11.9978 12.7808 12.3999 12.8204 12.7654 12.9718C13.1308 13.1232 13.4432 13.3795 13.6629 13.7084C13.8827 14.0373 14 14.424 14 14.8196C14 15.35 13.7893 15.8587 13.4142 16.2338C13.0391 16.6089 12.5304 16.8196 12 16.8196Z" fill="white" />
                            </g>
                        </svg>
                    </button>
                </div>


                <a data-bs-toggle="collapse" href="#collapseInformacionPedido" role="button" aria-expanded="true" aria-controls="collapseInformacionPedido">
                    <div class="collapsible-tabs">
                        <div class="label">
                            <div class="label-color-wrapper">
                                <div class="label-color"><div class="text">Información de Pedido</div></div>
                            </div>
                            <div class="chevron">
                                <svg width="23" height="14" viewBox="0 0 23 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <g id="&#240;&#159;&#166;&#134; icon &#34;chevron down&#34;">
                                        <path id="Vector" d="M1.5 2L11.5 12L21.5 2" stroke="#D7D2CB" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" />
                                    </g>
                                </svg>
                            </div>
                        </div>
                    </div>
                </a>

                @Html.Partial("_FormCabeceraNuevoPedidoCliente")


                <a data-bs-toggle="collapse" href="#collapseSeleccionProductos" role="button" aria-expanded="true" aria-controls="collapseSeleccionProductos">
                    <div class="collapsible-tabs">
                        <div class="label">
                            <div class="label-color-wrapper">
                                <div class="label-color"><div class="text">Selección de Productos</div></div>
                            </div>
                            <div class="chevron">
                                <svg width="23" height="14" viewBox="0 0 23 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <g id="&#240;&#159;&#166;&#134; icon &#34;chevron down&#34;">
                                        <path id="Vector" d="M1.5 2L11.5 12L21.5 2" stroke="#D7D2CB" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" />
                                    </g>
                                </svg>
                            </div>
                        </div>
                    </div>
                </a>
                <div class="collapse show mb-5" id="collapseSeleccionProductos">
                    <p style=" font-size: 14px;
                       font-style: normal;
                       font-weight: 500;
                       line-height: 20px;">Seleccione la manera de realizar el pedido</p>

                    <div class="d-flex justify-content-around flex-wrap">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioCatalogoProductos" checked onclick="showContent('catalogo')">
                            <label class="form-check-label" for="flexRadioCatalogoProductos">
                                Catálogo de Productos
                            </label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioCargaArchivo" onclick="showContent('archivo')">
                            <label class="form-check-label" for="flexRadioCargaArchivo">
                                Carga de Archivo
                            </label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioCodigoSap" onclick="showContent('codigo-sap')">
                            <label class="form-check-label" for="flexRadioCodigoSap">
                                Código Artículo
                            </label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioFavoritos" onclick="showContent('favoritos')">
                            <label class="form-check-label" for="flexRadioFavoritos">
                                Favoritos
                            </label>
                        </div>
                    </div>
                    <div class="contenido-radio">
                        <div class="catalogo">
                            <div class="row">
                                <div class="col-12 col-md-5">
                                    <div class="form-group mt-3 mb-3">
                                        <label class="label-datepicker" for="EstadoSelect">Familia de productos</label>
                                        <select class="form-control datepicker" id="familiaProductosSelect" onchange="getProductosByFamilia('@Url.Action("GetProductosPorFamilia", "Cliente")')">

                                            @foreach (var item in Model.listaFamiliaProductos)
                                            {
                                                <option value=@item.nombreFamilia>@item.nombreFamilia</option>
                                            }

                                        </select>
                                    </div>
                                </div>
                            </div>

                            @Html.Partial("_DetalleNuevoPedidoPorFamiliaCliente")


                        </div>
                        <div class="archivo" style="display: none;">
                            <form class="form-group mt-3 mb-3" method="post" enctype="multipart/form-data" onsubmit="handleSubmitExcel(event, '@Url.Action("SubirExcelProductos", "Cliente")')">
                                <div class="row">
                                    <div class="col-12 col-md-10">
                                        <label class="label-datepicker" for="archivoSelector">Seleccione el Archivo - Formato Excel</label>
                                        <input type="file" id="archivoSelector" name="file" class="form-control datepicker" />
                                    </div>
                                    <div class="col-12 col-md-2 mt-md-4 mt-2">
                                        <button type="submit" class="orange-rounded-button ms-1" style="background-color:#01ADEF   !important;">Subir</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="codigo-sap" style="display: none;">

                            <form class="row" onsubmit="handleSubmitCodigoArticulo(event,'@Url.Action("BuscarProductoCodigoSap", "Cliente")')">


                                <div class="col-12 col-md-6">
                                    <label class="label-datepicker" for="codigoSapSelector">Código del artículo</label>
                                    <input type="text" id="codigoSapSelector" name="codigoArticulo" class="form-control datepicker" placeholder="0000000000" />
                                </div>

                                <div class="col-12 col-md-6">
                                    <label class="label-datepicker" for="codigoSapSelector">Cantidad</label>
                                    <input type="number" min="1 " step="1" id="codigoSapCantidadSelector" name="codigoArticuloCantidad" class="form-control datepicker" />
                                </div>

                                <button type="submit" style="background: none; border: none;">
                                    <a class="orange-rounded-button" style="display:flex; justify-content: center; align-items:center; background-color: #01ADEF;">
                                        Agregar
                                    </a>
                                </button>
                            </form>
                            @* </div> *@
                        </div>
                        <div class="favoritos" style="display: none;">
                            <div class="table-responsive table-container pt-3" style="max-height: 305px;">
                                <table class="table">
                                    <thead class="card-table_header">
                                        <tr>
                                            <th scope="col" class="border-radius-left" style="padding:13px;">Código SAP</th>
                                            <th scope="col" style="padding:13px;">Descripción</th>
                                            <th scope="col" style="padding:13px;">Cantidad</th>
                                            <th scope="col" class="border-radius-right" style="padding:13px;"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.listadProductosFavoritos.result)
                                        {
                                            <form onsubmit="onSubmitAgregraFavorito(event, '@{

                                                                                            @JsonConvert.SerializeObject(item)
;
}', '@Url.Action("SeleccionarArticuloFavorito", "Cliente")')">
                                            <tr>
                                                <td>@item.codigoSAPArticulo</td>
                                                <td>@item.nombre</td>
                                                <td>

                                                    <input name="cantidadArticulo" type="number" step="1" value="0" min="0" />
                                                </td>
                                                <td>
                                                    <button type="submit" style="background: none; border: none;">
                                                        <a class="orange-rounded-button" style="display:flex; justify-content: center; align-items:center; background-color: #01ADEF;">
                                                            Agregar
                                                        </a>
                                                    </button>
                                                </td>
                                            </tr>
                                            </form>


                                        }


                                    </tbody>
                                </table>
                            </div>

                       
                        </div>
                    </div>

                </div>

                <a data-bs-toggle="collapse" href="#collapseInformacionProductos" role="button" aria-expanded="true" aria-controls="collapseInformacionProductos">
                    <div class="collapsible-tabs">
                        <div class="label">
                            <div class="label-color-wrapper">
                                <div class="label-color"><div class="text">Listado de productos seleccionados</div></div>
                            </div>
                            <div class="chevron">
                                <svg width="23" height="14" viewBox="0 0 23 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <g id="&#240;&#159;&#166;&#134; icon &#34;chevron down&#34;">
                                        <path id="Vector" d="M1.5 2L11.5 12L21.5 2" stroke="#D7D2CB" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" />
                                    </g>
                                </svg>
                            </div>
                        </div>
                    </div>
                </a>

                <div class="collapse show mb-5" id="collapseInformacionProductos">


                    <div class="modal fade" id="modalStock" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title card-title" id="exampleModalLabel">
                                        Stock
                                    </h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="table-responsive table-container mt-3">
                                        <table class="table">
                                            <thead class="card-table_header">
                                                <tr>
                                                    <th scope="col" class="border-radius-left" style="padding:13px;">C. Producto:</th>
                                                    <th scope="col" style="padding:13px;">Descripción Producto</th>
                                                    <th scope="col" style="padding:13px;">Nombre Bodega</th>
                                                    <th scope="col" style="padding:13px;">Bodega</th>
                                                    <th scope="col" style="padding:13px;">Stock Disponible</th>
                                                    <th scope="col" class="border-radius-right" style="padding:13px;">U. Material</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>188068</td>
                                                    <td>Pua Fort 500m</td>
                                                    <td>Quito</td>
                                                    <td>QUOO</td>
                                                    <td>23</td>
                                                    <td>Rollo</td>
                                                </tr>
                                                <tr>
                                                    <td>188068</td>
                                                    <td>Pua Fort 500m</td>
                                                    <td>Guayaquil</td>
                                                    <td>QUO2</td>
                                                    <td>23</td>
                                                    <td>Rollo</td>
                                                </tr>
                                                <tr>
                                                    <td>188068</td>
                                                    <td>Pua Fort 500m</td>
                                                    <td>Cuenca</td>
                                                    <td>QUO3</td>
                                                    <td>23</td>
                                                    <td>Rollo</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                               
                            </div>
                        </div>
                    </div>

                    <div id="tablaPedidosSeleccinoados">
                        @Html.Partial("_TableProductosSeleccionadosPedidoCliente")
                    </div>

                </div>
                <a data-bs-toggle="collapse" href="#collapseInfoPedidoSecond" role="button" aria-expanded="true" aria-controls="collapseInfoPedidoSecond">
                    <div class="collapsible-tabs">
                        <div class="label">
                            <div class="label-color-wrapper">
                                <div class="label-color"><div class="text">Información de Envío Productos</div></div>
                            </div>
                            <div class="chevron">
                                <svg width="23" height="14" viewBox="0 0 23 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <g id="&#240;&#159;&#166;&#134; icon &#34;chevron down&#34;">
                                        <path id="Vector" d="M1.5 2L11.5 12L21.5 2" stroke="#D7D2CB" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" />
                                    </g>
                                </svg>
                            </div>
                        </div>
                    </div>
                </a>

                <div class="collapse show mb-4" id="collapseInfoPedidoSecond">
                    <div class="row">
                        <div class="col-12 col-md-6">
                            <label for="startDate" class="label-datepicker">Fecha de Entrega</label>
                            <input id="startDate" class="form-control  datepicker" type="date" />
                            <span id="startDateSelected"></span>
                        </div>
                        <div class="col-12 col-md-6">
                            <label for="numero-orden-compra" class="label-datepicker">N° Numero de Orden de Compra</label>
                            <input id="numero-orden-compra" class="form-control datepicker" type="text" placeholder="Examinar" />
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label class="label-datepicker" for="lugar-entrega">Lugar de Entrega</label>
                                <textarea id="lugar-entrega" class="form-control datepicker" rows="4" placeholder="El contenido puede tener de 50 a 250 caracteres."></textarea>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label class="label-datepicker" for="observaciones">Observaciones</label>
                                <textarea id="observaciones" class="form-control datepicker" rows="4" placeholder="El contenido puede tener de 50 a 250 caracteres."></textarea>
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="label-datepicker" for="contacto-entrega">Contacto de Entrega</label>
                                <input id="contacto-entrega" contacto-entrega" class="form-control datepicker" type="text" placeholder="Ingrese" />
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="label-datepicker" for="soporte-venta">Soporte de Venta</label>
                                <input id="soporte-venta" contacto-entrega" class="form-control datepicker" type="text" placeholder="Examinar" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end pt-3 mb-3">
                    <button class="orange-rounded-button ms-1" onclick="crearNuevoPedido('@Url.Action("PostNuevoPedido", "Cliente")')">
                        Enviar
                        <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g id="01 align center">
                                <path id="Vector" d="M1.4437 7.48857C1.10885 7.58424 0.804795 7.76569 0.561607 8.01495C0.318419 8.26422 0.144531 8.57266 0.0571494 8.90976C-0.0302325 9.24687 -0.0280796 9.60094 0.063395 9.93696C0.15487 10.273 0.332495 10.5793 0.578696 10.8256L3.9907 14.2336V20.8196H10.5837L14.0187 24.2495C14.2031 24.4355 14.4224 24.5832 14.664 24.6841C14.9056 24.785 15.1648 24.8371 15.4267 24.8375C15.5988 24.8372 15.7702 24.815 15.9367 24.7715C16.2737 24.6867 16.5823 24.5145 16.8316 24.2724C17.0809 24.0304 17.262 23.7269 17.3567 23.3925L23.9907 0.840576L1.4437 7.48857ZM1.9997 9.41157L19.0277 4.39157L5.9927 17.4056V13.4056L1.9997 9.41157ZM15.4397 22.8356L11.4127 18.8196H7.4127L20.4457 5.79757L15.4397 22.8356Z" fill="white" />
                            </g>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    function handleSubmitExcel(e, url) {
        e.preventDefault();

        var formData = new FormData(); // Crear un objeto FormData para recopilar los datos del formulario
        formData.append('file', document.getElementById('archivoSelector').files[0]); // Agregar el archivo seleccionado al FormData

        // Realizar la solicitud AJAX
        fetch(url, {
            method: 'POST',
            body: formData// Pasar el FormData como cuerpo de la solicitud
        })
            .then(response => response.text())
            .then(html => {
                //console.log(html); // Verifica la respuesta en la consola

                document.getElementById('tablaPedidosSeleccinoados').innerHTML = html;
                //document.getElementById('table-productos-seleccionados').innerHTML = html;


            })
            .catch(error => console.error('Error al cargar información:', error));
        console.log(codigoArticulo, codigoSapCliente, cantidadArticulo)
    }

    function handleSubmitCodigoArticulo(e, url) {
        e.preventDefault();
        let codigoArticulo = e.target.elements.codigoArticulo.value;
        let cantidadArticulo = e.target.elements.codigoArticuloCantidad.value;
        let codigoSapCliente = document.getElementById('codigo-sap').value;
        console.log("fwef")
        if (isNullOrEmpty(codigoSapCliente)) {
            alert('Por favor ingrese el Código SAP del cliente en el apartado "Información del pedido"');
            return;
        }

        if (isNullOrEmpty(codigoArticulo)) {
            alert('Por favor ingrese el código del articulo');
            return;
        }

        if (isNullOrEmpty(cantidadArticulo)) {
            alert('Por favor ingrese una cantidad para el artículo a ingresar');
            return;
        }
        var urlCompleta = url + '?codigoSapCliente=' + encodeURIComponent(codigoSapCliente) + '&codigoArticulo=' + encodeURIComponent(codigoArticulo) + '&cantidadArticulo=' + encodeURIComponent(cantidadArticulo);
        console.log(urlCompleta)
        // Realizar la solicitud AJAX
        fetch(urlCompleta)
            .then(response => response.text())
            .then(html => {
                console.log(html); // Verifica la respuesta en la consola

                document.getElementById('tablaPedidosSeleccinoados').innerHTML = html;
                //document.getElementById('table-productos-seleccionados').innerHTML = html;


            })
            .catch(error => console.error('Error al cargar información:', error));
        console.log(codigoArticulo, codigoSapCliente, cantidadArticulo)
    }

    function isNullOrEmpty(str) {
        return str == null || str.trim() === '';
    }

    function showContent(contentId) {
        // Oculta todos los contenidos
        document.querySelectorAll('.contenido-radio > div').forEach(div => {
            div.style.display = 'none';
        });

        // Muestra el contenido correspondiente al radio button seleccionado
        document.querySelector(`.${contentId}`).style.display = 'block';
    }

    const fillCabeceraNuevoPedido = (url) => {

        let codigoSAPCliente = document.getElementById("codigo-sap").value;

        url = `${url}?codigoSAPCliente=${codigoSAPCliente}`

        console.log(url)

        document.getElementById("collapseInformacionPedido").innerHTML = '<h1>Cargando información...</h1>';

        fetch(url)
            .then(response => response.text())
            .then(html => {

                document.getElementById("collapseInformacionPedido").innerHTML = html

            })
            .catch(error => console.error('Error al cargar información:', error));
    }

    const getProductosByFamilia = (url) => {

        let familiaSelect = document.getElementById("familiaProductosSelect");

        let familiaSelectedValue = familiaSelect.options[familiaSelect.selectedIndex].value;

        url = `${url}?familia=${familiaSelectedValue}`

        console.log(url)

        document.getElementById("detalleProductosPorFamilia").innerHTML = '<h1>Cargando información...</h1>';

        fetch(url)
            .then(response => response.text())
            .then(html => {

                document.getElementById("detalleProductosPorFamilia").innerHTML = html

            })
            .catch(error => console.error('Error al cargar información:', error));
    }

    const recalcular = (url) => {

        let codigoSAPCliente = document.getElementById("codigo-sap").value;

        let tipoEntregaSelect = document.getElementById("tipoEntregaSelect");

        let tipoEntregaSelectedValue = tipoEntregaSelect.options[tipoEntregaSelect.selectedIndex].value;

        let tipoPagoSelect = document.getElementById("tipoPagoSelect");

        let tipoPagoSelectedValue = tipoPagoSelect.options[tipoPagoSelect.selectedIndex].value;

        let direccionEntregaSelect = document.getElementById("direccionEntregaSelect");

        let direccionEntregaSelectedValue = direccionEntregaSelect.options[direccionEntregaSelect.selectedIndex].value;

        let canalSelect = document.getElementById("canalSelect");

        let canalSelectedValue = canalSelect.options[canalSelect.selectedIndex].value;


        url = `${url}?codigoSAPCliente=${codigoSAPCliente}&codigoTipoEntrega=${tipoEntregaSelectedValue}&codigoTipoPago=${tipoPagoSelectedValue}&codigoSAPDireccionEntrega=${direccionEntregaSelectedValue}&canal=${canalSelectedValue}`

        document.getElementById("table-productos-seleccionados").innerHTML = '<h1>Cargando información...</h1>';

        fetch(url)
            .then(response => response.text())
            .then(html => {

                document.getElementById("table-productos-seleccionados").innerHTML = html

            })
            .catch(error => console.error('Error al cargar información:', error));

    }

    const guardarBorrador = (url) => {

        let codigoSAPCliente = document.getElementById("codigo-sap").value;

        let tipoEntregaSelect = document.getElementById("tipoEntregaSelect");

        let tipoEntregaSelectedValue = tipoEntregaSelect.options[tipoEntregaSelect.selectedIndex].value;

        let tipoPagoSelect = document.getElementById("tipoPagoSelect");

        let tipoPagoSelectedValue = tipoPagoSelect.options[tipoPagoSelect.selectedIndex].value;

        let direccionEntregaSelect = document.getElementById("direccionEntregaSelect");

        let direccionEntregaSelectedValue = direccionEntregaSelect.options[direccionEntregaSelect.selectedIndex].value;

        let canalSelect = document.getElementById("canalSelect");

        let canalSelectedValue = canalSelect.options[canalSelect.selectedIndex].value;


        url = `${url}?codigoSAPCliente=${codigoSAPCliente}&codigoTipoEntrega=${tipoEntregaSelectedValue}&codigoTipoPago=${tipoPagoSelectedValue}&codigoSAPDireccionEntrega=${direccionEntregaSelectedValue}&canal=${canalSelectedValue}`

        document.getElementById("table-productos-seleccionados").innerHTML = '<h1>Cargando información...</h1>';

        fetch(url)
            .then(response => response.text())
            .then(html => {

                document.getElementById("table-productos-seleccionados").innerHTML = html

                showAlert("Proceso exitoso", "", "success");

            })
            .catch(error => console.error('Error al cargar información:', error));

    }

    const crearNuevoPedido = (url) => {

        let codigoSAPCliente = document.getElementById("codigo-sap").value;

        let fechaEntrega = document.getElementById("startDate").value;

        let numeroOrdenCompra = document.getElementById("numero-orden-compra").value;

        let contactoEntrega = document.getElementById("contacto-entrega").value;

        let lugarEntrega = document.getElementById("lugar-entrega").value;

        let observaciones = document.getElementById("observaciones").value;

        let tipoEntregaSelect = document.getElementById("tipoEntregaSelect");

        let tipoEntregaSelectedValue = tipoEntregaSelect.options[tipoEntregaSelect.selectedIndex].value;

        let tipoPagoSelect = document.getElementById("tipoPagoSelect");

        let tipoPagoSelectedValue = tipoPagoSelect.options[tipoPagoSelect.selectedIndex].value;

        let direccionEntregaSelect = document.getElementById("direccionEntregaSelect");

        let direccionEntregaSelectedValue = direccionEntregaSelect.options[direccionEntregaSelect.selectedIndex].value;

        let canalSelect = document.getElementById("canalSelect");

        let canalSelectedValue = canalSelect.options[canalSelect.selectedIndex].value;


        url = `${url}?codigoSAPCliente=${codigoSAPCliente}&codigoTipoEntrega=${tipoEntregaSelectedValue}&codigoTipoPago=${tipoPagoSelectedValue}&codigoSAPDireccionEntrega=${direccionEntregaSelectedValue}&canal=${canalSelectedValue}
                                                                                                                   &fechaEntrega=${fechaEntrega}&numeroOrdenCompra=${numeroOrdenCompra}&lugarEntrega=${lugarEntrega}&observaciones=${observaciones}&contactoEntrega=${contactoEntrega}`

        console.log(url)

        document.getElementById("table-productos-seleccionados").innerHTML = '<h1>Cargando información...</h1>';

        fetch(url)
            .then(response => response.text())
            .then(html => {

                document.getElementById("table-productos-seleccionados").innerHTML = html

                let mensajeProceso = "@ViewBag.MensajeProceso";

                showAlert("Proceso exitoso", mensajeProceso, "Aceptar");

            })
            .catch(error => console.error('Error al cargar información:', error));
    }

    function onSubmitAgregraFavorito(e, item, url) {
        e.preventDefault();
        let cantidad = e.target.elements.cantidadArticulo.value;
        if (cantidad === '0')
            return;
        //console.log(item);
        let urlCompleta = url + '?cantidadArticulo=' + encodeURIComponent(cantidad) + '&jsonArticulo=' + encodeURIComponent(item);
        fetch(urlCompleta)
            .then(response => response.text())
            .then(html => {

                document.getElementById('tablaPedidosSeleccinoados').innerHTML = html;
            })
            .catch(error => console.error('Error al cargar información:', error));
    }

    const onSubmitAgregarPorFamilia = (idInputCantidad, codigoSAPArticulo, url, familia) => {

        let cantidad = document.getElementById(idInputCantidad).value;

        let familiaSelect = document.getElementById("familiaProductosSelect");

        let familiaSelectedValue = familiaSelect.options[familiaSelect.selectedIndex].value;

        console.log("entro a por familia con valor" + cantidad);

        url = `${url}?cantidadArticulo=${cantidad}&codigoSAPArticulo=${codigoSAPArticulo}&familia=${familiaSelectedValue}`;

        if (cantidad === '0')
            return;

        fetch(url)
            .then(response => response.text())
            .then(html => {

                document.getElementById('tablaPedidosSeleccinoados').innerHTML = html;
            })
            .catch(error => console.error('Error al cargar información:', error));
    }

    const onChangeValueControl = (idCbEntrega, idTxtDescFactura, idTxtDescNC, idTxtCantidad, idChbAFamilia, idChbAFinMes, codigoSAPArticulo, numeroRegistro, url) => {

        let entregaSelect = document.getElementById(idCbEntrega);

        let entregaSelectedValue = entregaSelect.options[entregaSelect.selectedIndex].value;

        let descFactura = document.getElementById(idTxtDescFactura).value;

        let descNc = document.getElementById(idTxtDescNC).value;

        let cantidad = document.getElementById(idTxtCantidad).value;

        let aFinMes = document.getElementById(idChbAFinMes).checked ? "S" : "N";

        let aFamilia = document.getElementById(idChbAFamilia).checked ? "S" : "N";

        console.log("entro a inchange" + document.getElementById(idChbAFinMes).checked);

        url = `${url}?codigoSAPArticulo=${codigoSAPArticulo}&numeroRegistro=${numeroRegistro}&entrega=${entregaSelectedValue}&descFactura=${descFactura}&descNc=${descNc}&cantidad=${cantidad}&aFinMes=${aFinMes}&aFamilia=${aFamilia}`;

        console.log(url);

        fetch(url)
            .then(response => response.text())
            .then(html => {

                document.getElementById('tablaPedidosSeleccinoados').innerHTML = html;
            })
            .catch(error => console.error('Error al cargar información:', error));
    }

    const showAlert = (title, message, type) => {
        Swal.fire({
            title: title,
            text: message,
            showDenyButton: false,
            showCancelButton: false,
            confirmButtonText: "Aceptar",
        }).then((result) => {
            if (result.isConfirmed) {
                console.log("se presiono")
            }
        });
    }

    $(document).ready(() => { getProductosByFamilia("/Cliente/GetProductosPorFamilia"); });

</script>
