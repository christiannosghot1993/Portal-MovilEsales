@model Portal_MovilEsales.Services.ClienteServices.ViewModels.Reclamo.NuevoReclamo
@{
    ViewData["Title"] = "Nuevo Reclamo";
}

<div class="col-sm-12 mt-3">
    <div class="card card-container">
        <div class="card-body">
            <div class="card-title">
                <h1>Nuevo Reclamo</h1>
                <div class="d-flex justify-content-end pt-3 mb-3 ml-auto">
                    <button class="orange-rounded-button ms-1" data-bs-dismiss="modal" style="background-color: #69A5BD;" onclick="cancelar()">
                        Cancelar
                        <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g id="01 align center">
                                <path id="Vector" d="M15.293 8.11279L12 11.4058L8.70697 8.11279L7.29297 9.52679L10.586 12.8198L7.29297 16.1128L8.70697 17.5268L12 14.2338L15.293 17.5268L16.707 16.1128L13.414 12.8198L16.707 9.52679L15.293 8.11279Z" fill="white" />
                                <path id="Vector_2" d="M12 0.819824C9.62663 0.819824 7.30655 1.52361 5.33316 2.84219C3.35977 4.16077 1.8217 6.03491 0.913451 8.22762C0.00519943 10.4203 -0.232441 12.8331 0.230582 15.1609C0.693605 17.4887 1.83649 19.6269 3.51472 21.3051C5.19295 22.9833 7.33115 24.1262 9.65892 24.5892C11.9867 25.0523 14.3995 24.8146 16.5922 23.9064C18.7849 22.9981 20.6591 21.4601 21.9776 19.4867C23.2962 17.5133 24 15.1932 24 12.8198C23.9966 9.63828 22.7312 6.58804 20.4815 4.33834C18.2318 2.08865 15.1815 0.823265 12 0.819824V0.819824ZM12 22.8198C10.0222 22.8198 8.08879 22.2333 6.4443 21.1345C4.79981 20.0357 3.51809 18.4739 2.76121 16.6467C2.00433 14.8194 1.8063 12.8087 2.19215 10.8689C2.578 8.92911 3.53041 7.14728 4.92894 5.74876C6.32746 4.35023 8.10929 3.39782 10.0491 3.01197C11.9889 2.62612 13.9996 2.82415 15.8268 3.58103C17.6541 4.33791 19.2159 5.61963 20.3147 7.26412C21.4135 8.90861 22 10.842 22 12.8198C21.9971 15.4711 20.9426 18.0129 19.0679 19.8877C17.1931 21.7624 14.6513 22.8169 12 22.8198Z" fill="white" />
                            </g>
                        </svg>
                    </button>

                    <button class="orange-rounded-button ms-1" onclick="guardarReclamo('@Url.Action("GuardarReclamo","Cliente")')">
                        Guardar
                        <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g id="01 align center">
                                <path id="Vector" d="M19 0.819824H3C2.20435 0.819824 1.44129 1.13589 0.87868 1.6985C0.31607 2.26111 0 3.02417 0 3.81982L0 24.8198H24V5.81982L19 0.819824ZM7 2.81982H17V6.81982H7V2.81982ZM22 22.8198H2V3.81982C2 3.55461 2.10536 3.30025 2.29289 3.11272C2.48043 2.92518 2.73478 2.81982 3 2.81982H5V8.81982H19V3.64782L22 6.64782V22.8198Z" fill="white" />
                                <path id="Vector_2" d="M12 10.8196C11.2089 10.8196 10.4355 11.0542 9.77772 11.4937C9.11993 11.9332 8.60723 12.5579 8.30448 13.2888C8.00173 14.0198 7.92252 14.824 8.07686 15.5999C8.2312 16.3759 8.61216 17.0886 9.17157 17.648C9.73098 18.2074 10.4437 18.5884 11.2196 18.7427C11.9956 18.8971 12.7998 18.8178 13.5307 18.5151C14.2616 18.2123 14.8864 17.6997 15.3259 17.0419C15.7654 16.3841 16 15.6107 16 14.8196C16 13.7587 15.5786 12.7413 14.8284 11.9912C14.0783 11.241 13.0609 10.8196 12 10.8196ZM12 16.8196C11.6044 16.8196 11.2178 16.7023 10.8889 16.4825C10.56 16.2628 10.3036 15.9504 10.1522 15.5849C10.0009 15.2195 9.96126 14.8174 10.0384 14.4294C10.1156 14.0414 10.3061 13.6851 10.5858 13.4054C10.8655 13.1257 11.2219 12.9352 11.6098 12.858C11.9978 12.7808 12.3999 12.8204 12.7654 12.9718C13.1308 13.1232 13.4432 13.3795 13.6629 13.7084C13.8827 14.0373 14 14.424 14 14.8196C14 15.35 13.7893 15.8587 13.4142 16.2338C13.0391 16.6089 12.5304 16.8196 12 16.8196Z" fill="white" />
                            </g>
                        </svg>
                    </button>
                </div>
            </div>

            <div class="row">
                <div class="col-12 col-md-6">
                    <div class="form-group mb-3">
                        <label class="label-datepicker" for="motivo">Motivo </label>
                        <select class="form-control datepicker" id="motivo" onchange="checkSelected()">
                            <option value="" selected disabled>Seleccione una opción</option>
                            @foreach (var item in Model.listadoMotivo)
                            {
                                <option value="@item.motivo">@item.motivo</option>
                            }
                        </select>
                    </div>
                </div>


                <div class="col-12 col-md-6 mb-3">
                    <label for="factura" class="label-datepicker">Factura</label>
                    <input id="factura" class="form-control datepicker" type="number" placeholder="001-001-00000000001" />
                </div>

                @*<div class="col-12">
                <div class="form-group mb-3">
                <label class="label-datepicker" for="producto">Producto</label>
                <select class="form-control datepicker" id="producto" onchange="checkSelected()">
                <option value="" selected disabled>Seleccione una opción</option>
                @foreach (var item in Model.listadoProductos)
                {
                <option value=@item.codigoProducto>@item.codigoDescProducto</option>
                }
                </select>
                </div>
                </div>*@

                <div class="col-12">
                    <div class="form-group mb-3">
                        <label class="label-datepicker"> Productos</label>
                        <input class="form-control datepicker" list="productosLista" id="productoSeleccionado" />
                        <datalist id="productosLista">
                            @foreach (var item in Model.listadoProductos)
                            {
                                <option value=@item.codigoDescProducto>@item.codigoDescProducto</option>
                            }
                        </datalist>
                    </div>
                </div>



                <div class="col-12 col-md-6">
                    <div class="form-group mb-3">
                        <label class="label-datepicker" for="referencia">Referencia</label>
                        <input id="referencia" class="form-control datepicker" rows="4" placeholder="Referencia" />
                    </div>
                </div>

                <div class="col-12 col-md-6">
                    <div class="form-group mb-3">
                        <label class="label-datepicker" for="asunto">Asunto</label>
                        <input id="asunto" class="form-control datepicker" rows="4" placeholder="Asunto" />
                    </div>
                </div>

                <div class="col-12">
                    <div class="form-group mb-3">
                        <label class="label-datepicker" for="observaciones">Observaciones</label>
                        <textarea id="observaciones" class="form-control datepicker" rows="4" placeholder="El contenido puede tener de 50 a 250 caracteres."></textarea>
                    </div>
                </div>

                <div class="archivo col-12 col-md-6">
                    <div class="form-group mb-3">
                        <label class="label-datepicker" for="archivoFotografia">Fotografía del material</label>
                        <input type="file" id="archivoFotografia" name="fotografiaMaterial" class="form-control datepicker" />
                    </div>
                </div>

                <div class="archivo col-12 col-md-6">
                    <div class="form-group mb-3">
                        <label class="label-datepicker" for="archivoFactura">Copia de factura</label>
                        <input type="file" id="archivoFactura" name="copiaFactura" class="form-control datepicker" />
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="responsive">
    @foreach (var item in Model.listadoImagenes.OrderBy(x => x.orden))
    {
        <div>
            <img src="@item.linkImagen" alt="@item.orden">
        </div>
    }
</div>
<script>

    function cancelar() {
        window.location.href = "/Cliente/InicioReclamo";
    }
    function checkSelected() {
        var motivo = document.getElementById("motivo").value
        var producto = document.getElementById("producto").value
        var selectedValue = motivo.value;
        var productoSelectedValue = producto.value;
        if (selectedValue == "") {
            motivo.style.color = "#9e9e9e";
        } else {
            motivo.style.color = "#000"; // Cambiar a color de texto normal si se selecciona algo
        }
        if (productoSelectedValue == "") {
            producto.style.color = "#9e9e9e";
        } else {
            producto.style.color = "#000";
        }
        // Llamar a la función checkSelected cuando se cambie el valor de los elementos motivo y producto
        document.getElementById("motivo").addEventListener("change", checkSelected);
        document.getElementById("producto").addEventListener("change", checkSelected);

        // También puedes llamar a checkSelected para que se ejecute una vez cuando la página se cargue inicialmente
        checkSelected();
    }

    /* const guardarReclamo = (url) => {
         var motivo = document.getElementById("motivo").value;
         console.log("motivo", motivo);
         var factura = document.getElementById("factura").value;

         var producto = document.getElementById("productoSeleccionado").value;
         console.log("producto ", producto);
         var referencia = document.getElementById("referencia").value;
         var asunto = document.getElementById("asunto").value;
         var observaciones = document.getElementById("observaciones").value;
         var fotografiaMaterial = "Base64 de fotografia"
         var copiaFactura = "Base65 de la factura"

         url = `${url}?motivo=${motivo}&factura=${factura}&producto=${producto}&referencia=${referencia}&asunto=${asunto}&observaciones=${observaciones}&fotografiaMaterial=${fotografiaMaterial}&copiaFactura=${copiaFactura}`
         fetch(url)
             .then(response => response.text())
             .then(html => {
                  showAlert("Proceso exitoso", "", "success");
                  //window.location.href = "/Cliente/InicioReclamo";
             })
             .catch(error => console.error('Error al cargar información:', error));
     }*/
    const guardarReclamo = (url) => {
        var motivo = document.getElementById("motivo").value;
        var factura = document.getElementById("factura").value;
        var producto = document.getElementById("productoSeleccionado").value;
        var referencia = document.getElementById("referencia").value;
        var asunto = document.getElementById("asunto").value;
        var observaciones = document.getElementById("observaciones").value;

        // Leer los archivos seleccionados
        var fotografiaMaterialFile = document.getElementById("archivoFotografia").files[0];
        var copiaFacturaFile = document.getElementById("archivoFactura").files[0];

        // Convertir los archivos a Base64
        var readerFotografia = new FileReader();
        var readerCopiaFactura = new FileReader();

        readerFotografia.onload = function () {
            var fotografiaMaterialBase64 = readerFotografia.result.split(',')[1]; // Obtener solo la parte base64
            // Llamar a la función para convertir y enviar la copia de la factura
            readerCopiaFactura.readAsDataURL(copiaFacturaFile);
        };

        readerFotografia.onloadend = function () {
            readerCopiaFactura.onloadend = function () {
                var fotografiaMaterialBase64 = readerFotografia.result.split(',')[1]; // Obtener solo la parte base64
                var copiaFacturaBase64 = readerCopiaFactura.result.split(',')[1]; // Obtener solo la parte base64
                // Llamar a la función para enviar la solicitud al servidor
                sendReclamoData(url, motivo, factura, producto, referencia, asunto, observaciones, fotografiaMaterialBase64, copiaFacturaBase64);
            };
        };

        readerFotografia.readAsDataURL(fotografiaMaterialFile);
    };

    function isBase64(str) {
        try {
            return btoa(atob(str)) == str;
        } catch (err) {
            return false;
        }
    }


    const sendReclamoData = (url, motivo, factura, producto, referencia, asunto, observaciones, fotografiaMaterial, copiaFactura) => {
        // Construir la URL con los datos del formulario
        console.log("fotografiaMaterial", fotografiaMaterial);
        console.log("copiaFactura ", copiaFactura);
        console.log("¿fotografiaMaterial está en Base64? ", isBase64(fotografiaMaterial));
        console.log("¿fotografiaMaterial está en Base64? ", isBase64(copiaFactura));

        url = `${url}?motivo=${motivo}&factura=${factura}&producto=${producto}&referencia=${referencia}&asunto=${asunto}&observaciones=${observaciones}&fotografiaMaterial=${fotografiaMaterial}&copiaFactura=${copiaFactura}`;

        // Realizar la solicitud POST al servidor
        fetch(url)
            .then(response => response.text())
            .then(html => {
                showAlert("Proceso exitoso", "", "success");
                window.location.href = "/Cliente/InicioReclamo";
            })
            .catch(error => console.error('Error al cargar información:', error));
    };



    const showAlert = (title, message, type) => {
        Swal.fire({
            title: title,
            text: message,
            showDenyButton: false,
            showCancelButton: false,
            confirmButtonText: "Aceptar",
        }).then((result) => {
            if (result.isConfirmed) {
                console.log("se presiono")
            }
        });
    }

</script>